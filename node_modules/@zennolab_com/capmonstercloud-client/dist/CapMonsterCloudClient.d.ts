import { CaptchaResult } from './CaptchaResult';
import { ClientOptions } from './ClientOptions';
import { GetBalanceResponseSuccess } from './GetBalance';
import { GetResultTimeouts } from './GetResultTimeouts';
import { HttpClient } from './HttpClient';
import { FunCaptchaProxylessRequest } from './Requests/FunCaptchaProxylessRequest';
import { FunCaptchaResponse } from './Responses/FunCaptchaResponse';
import { FunCaptchaRequest } from './Requests/FunCaptchaRequest';
import { GeeTestProxylessRequest } from './Requests/GeeTestProxylessRequest';
import { GeeTestResponse } from './Responses/GeeTestResponse';
import { GeeTestRequest } from './Requests/GeeTestRequest';
import { HCaptchaProxylessRequest } from './Requests/HCaptchaProxylessRequest';
import { HCaptchaResponse } from './Responses/HCaptchaResponse';
import { HCaptchaRequest } from './Requests/HCaptchaRequest';
import { TurnstileRequest } from './Requests/TurnstileRequest';
import { TurnstileProxylessRequest } from './Requests/TurnstileRequestProxyless';
import { ImageToTextRequest } from './Requests/ImageToTextRequest';
import { ImageToTextResponse } from './Responses/ImageToTextResponse';
import { RecaptchaV2EnterpriseProxylessRequest } from './Requests/RecaptchaV2EnterpriseProxylessRequest';
import { RecaptchaV2EnterpriseResponse } from './Responses/RecaptchaV2EnterpriseResponse';
import { RecaptchaV2EnterpriseRequest } from './Requests/RecaptchaV2EnterpriseRequest';
import { RecaptchaV2ProxylessRequest } from './Requests/RecaptchaV2ProxylessRequest';
import { RecaptchaV2Response } from './Responses/RecaptchaV2Response';
import { RecaptchaV2Request } from './Requests/RecaptchaV2Request';
import { RecaptchaV3ProxylessRequest } from './Requests/RecaptchaV3ProxylessRequest';
import { RecaptchaV3Response } from './Responses/RecaptchaV3Response';
import { TurnstileResponse } from './Responses/TurnstileResponse';
import { ComplexImageRecaptchaRequest } from './Requests/ComplexImageRecaptchaRequest';
import { ComplexImageResponse } from './Responses/ComplexImageResponse';
import { ComplexImageHCaptchaRequest } from './Requests/ComplexImageHCaptchaRequest';
import { ComplexImageFunCaptchaRequest } from './Requests/ComplexImageFunCaptchaRequest';
import { DataDomeResponse } from './Responses/DataDomeResponse';
import { DataDomeRequest } from './Requests/DataDomeRequest';
import { TenDIRequest } from './Requests/TenDIRequest';
import { TenDIResponse } from './Responses/TenDIResponse';
import { AmazonProxylessRequest } from './Requests/AmazonProxylessRequest';
import { AmazonResponse } from './Responses/AmazonResponse';
import { AmazonRequest } from './Requests/AmazonRequest';
import { BasiliskRequest } from './Requests/BasiliskRequest';
import { BasiliskResponse } from './Responses/BasiliskResponse';
import { ImpervaRequest } from './Requests/ImpervaRequest';
import { ImpervaResponse } from './Responses/ImpervaResponse';
import { BinanceRequest } from './Requests/BinanceRequest';
import { BinanceResponse } from './Responses/BinanceResponse';
import { ComplexImageTaskRecognitionRequest } from './Requests/ComplexImageTaskRecognitionRequest';
import { ComplexImageRecognitionResponse } from './Responses/ComplexImageRecognitionResponse';
import { BinanceProxylessRequest } from './Requests/BinanceProxylessRequest';
/**
 * Base type for capmonster.cloud Client exceptions
 */
export declare class CapmonsterCloudClientError extends Error {
}
/**
 * CapMonsterCloud client
 */
export declare class CapMonsterCloudClient {
    private _options;
    private _httpClient;
    constructor(_options: ClientOptions, _httpClient: HttpClient);
    /**
     * Gets current amount of money on balance
     * {@link https://zennolab.atlassian.net/wiki/spaces/APIS/pages/655432/getBalance+retrieve+account+balance}
     */
    getBalance(cancellationController?: AbortController): Promise<GetBalanceResponseSuccess>;
    /**
     * captcha task creating
     * {@link https://zennolab.atlassian.net/wiki/spaces/APIS/pages/393308/createTask+captcha+task+creating}
     */
    private CreateTask;
    /**
     * request task result
     * {@link https://zennolab.atlassian.net/wiki/spaces/APIS/pages/688194/getTaskResult+request+task+result}
     */
    private GetTaskResult;
    /**
     * Solve FunCaptchaTaskProxyless task
     * You will get response within 10 - 80 secs period depending on service workload.
     */
    Solve(task: FunCaptchaProxylessRequest, resultTimeouts?: GetResultTimeouts, cancellationController?: AbortController): Promise<CaptchaResult<FunCaptchaResponse>>;
    /**
     * Solve FunCaptchaTask task
     * You will get response within 10 - 80 secs period depending on service workload.
     */
    Solve(task: FunCaptchaRequest, resultTimeouts?: GetResultTimeouts, cancellationController?: AbortController): Promise<CaptchaResult<FunCaptchaResponse>>;
    /**
     * Solve GeeTestTaskProxyless task
     * You will get response within 10 - 80 secs period depending on service workload.
     */
    Solve(task: GeeTestProxylessRequest, resultTimeouts?: GetResultTimeouts, cancellationController?: AbortController): Promise<CaptchaResult<GeeTestResponse>>;
    /**
     * Solve GeeTestTask task
     * You will get response within 10 - 80 secs period depending on service workload.
     */
    Solve(task: GeeTestRequest, resultTimeouts?: GetResultTimeouts, cancellationController?: AbortController): Promise<CaptchaResult<GeeTestResponse>>;
    /**
     * Solve HCaptchaTaskProxyless task
     * You will get response within 10 - 180 secs period depending on service workload.
     */
    Solve(task: HCaptchaProxylessRequest, resultTimeouts?: GetResultTimeouts, cancellationController?: AbortController): Promise<CaptchaResult<HCaptchaResponse>>;
    /**
     * Solve HCaptchaTask task
     * You will get response within 10 - 180 secs period depending on service workload.
     */
    Solve(task: HCaptchaRequest, resultTimeouts?: GetResultTimeouts, cancellationController?: AbortController): Promise<CaptchaResult<HCaptchaResponse>>;
    /**
     * Solve ImageToText task
     * You will get response within 300ms to 6s period depending on service workload.
     */
    Solve(task: ImageToTextRequest, resultTimeouts?: GetResultTimeouts, cancellationController?: AbortController): Promise<CaptchaResult<ImageToTextResponse>>;
    /**
     * Solve RecaptchaV2EnterpriseTaskProxyless task
     * You will get response within 10 - 180 secs period depending on service workload.
     */
    Solve(task: RecaptchaV2EnterpriseProxylessRequest, resultTimeouts?: GetResultTimeouts, cancellationController?: AbortController): Promise<CaptchaResult<RecaptchaV2EnterpriseResponse>>;
    /**
     * Solve RecaptchaV2EnterpriseTask task
     * You will get response within 10 - 180 secs period depending on service workload.
     */
    Solve(task: RecaptchaV2EnterpriseRequest, resultTimeouts?: GetResultTimeouts, cancellationController?: AbortController): Promise<CaptchaResult<RecaptchaV2EnterpriseResponse>>;
    /**
     * Solve NoCaptchaTaskProxyless task
     * You will get response within 10 - 180 secs period depending on service workload.
     */
    Solve(task: RecaptchaV2ProxylessRequest, resultTimeouts?: GetResultTimeouts, cancellationController?: AbortController): Promise<CaptchaResult<RecaptchaV2Response>>;
    /**
     * Solve NoCaptchaTask task
     * You will get response within 10 - 180 secs period depending on service workload.
     */
    Solve(task: RecaptchaV2Request, resultTimeouts?: GetResultTimeouts, cancellationController?: AbortController): Promise<CaptchaResult<RecaptchaV2Response>>;
    /**
     * Solve RecaptchaV3TaskProxyless task
     * You will get response within 10 - 180 secs period depending on service workload.
     */
    Solve(task: RecaptchaV3ProxylessRequest, resultTimeouts?: GetResultTimeouts, cancellationController?: AbortController): Promise<CaptchaResult<RecaptchaV3Response>>;
    /**
     * Solve DataDomeRequest task
     * You will get response within 10 - 180 secs period depending on service workload.
     */
    Solve(task: DataDomeRequest, resultTimeouts?: GetResultTimeouts, cancellationController?: AbortController): Promise<CaptchaResult<DataDomeResponse>>;
    /**
     * Solve TenDI task
     * You will get response within 10 - 180 secs period depending on service workload.
     */
    Solve(task: TenDIRequest, resultTimeouts?: GetResultTimeouts, cancellationController?: AbortController): Promise<CaptchaResult<TenDIResponse>>;
    /**
     * Solve Basilisk task
     * You will get response within 10 - 180 secs period depending on service workload.
     */
    Solve(task: BasiliskRequest, resultTimeouts?: GetResultTimeouts, cancellationController?: AbortController): Promise<CaptchaResult<BasiliskResponse>>;
    /**
     * Solve Imperva task
     * You will get response within 10 - 180 secs period depending on service workload.
     */
    Solve(task: ImpervaRequest, resultTimeouts?: GetResultTimeouts, cancellationController?: AbortController): Promise<CaptchaResult<ImpervaResponse>>;
    /**
     * Solve Binance task
     * You will get response within 10 - 180 secs period depending on service workload.
     */
    Solve(task: BinanceRequest, resultTimeouts?: GetResultTimeouts, cancellationController?: AbortController): Promise<CaptchaResult<BinanceResponse>>;
    /**
     * Solve BinanceProxyless task
     * You will get response within 10 - 180 secs period depending on service workload.
     */
    Solve(task: BinanceProxylessRequest, resultTimeouts?: GetResultTimeouts, cancellationController?: AbortController): Promise<CaptchaResult<BinanceResponse>>;
    /**
     * Solve ComplexImageRecognition task
     * You will get response within 10 - 180 secs period depending on service workload.
     */
    Solve(task: ComplexImageTaskRecognitionRequest, resultTimeouts?: GetResultTimeouts, cancellationController?: AbortController): Promise<CaptchaResult<ComplexImageRecognitionResponse>>;
    /**
     * Solve AmazonProxyless task
     * You will get response within 10 - 180 secs period depending on service workload.
     */
    Solve(task: AmazonProxylessRequest, resultTimeouts?: GetResultTimeouts, cancellationController?: AbortController): Promise<CaptchaResult<AmazonResponse>>;
    /**
     * Solve Amazon task
     * You will get response within 10 - 180 secs period depending on service workload.
     */
    Solve(task: AmazonRequest, resultTimeouts?: GetResultTimeouts, cancellationController?: AbortController): Promise<CaptchaResult<AmazonResponse>>;
    /**
     * Solve TurnstileProxyless task
     * You will get response within 10 - 180 secs period depending on service workload.
     */
    Solve(task: TurnstileProxylessRequest, resultTimeouts?: GetResultTimeouts, cancellationController?: AbortController): Promise<CaptchaResult<TurnstileResponse>>;
    /**
     * Solve Turnstile task
     * You will get response within 10 - 180 secs period depending on service workload.
     */
    Solve(task: TurnstileRequest, resultTimeouts?: GetResultTimeouts, cancellationController?: AbortController): Promise<CaptchaResult<TurnstileResponse>>;
    /**
     * Solve Complex Image Recaptcha Task
     * You will get response within 10 - 180 secs period depending on service workload.
     */
    Solve(task: ComplexImageRecaptchaRequest, resultTimeouts?: GetResultTimeouts, cancellationController?: AbortController): Promise<CaptchaResult<ComplexImageResponse>>;
    /**
     * Solve Complex Image HCaptcha Task
     * You will get response within 10 - 180 secs period depending on service workload.
     */
    Solve(task: ComplexImageHCaptchaRequest, resultTimeouts?: GetResultTimeouts, cancellationController?: AbortController): Promise<CaptchaResult<ComplexImageResponse>>;
    /**
     * Solve Complex Image FunCaptcha Task
     * You will get response within 10 - 180 secs period depending on service workload.
     */
    Solve(task: ComplexImageFunCaptchaRequest, resultTimeouts?: GetResultTimeouts, cancellationController?: AbortController): Promise<CaptchaResult<ComplexImageResponse>>;
}
