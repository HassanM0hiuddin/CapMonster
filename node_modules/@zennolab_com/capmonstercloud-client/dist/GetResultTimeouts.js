"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.detectResultTimeouts = exports.BinanceTaskTimeouts = exports.AmazonTaskTimeouts = exports.CustomTaskTimeouts = exports.ComplexImageTimeouts = exports.TurnstileTimeouts = exports.GeeTestTimeouts = exports.HCaptchaTimeouts = exports.FunCaptchaTimeouts = exports.ImageToTextTimeouts = exports.RecaptchaV3Timeouts = exports.RecaptchaV2EnterpriseTimeouts = exports.RecaptchaV2Timeouts = void 0;
const TaskType_1 = require("./TaskType");
exports.RecaptchaV2Timeouts = {
    firstRequestDelay: 1000 * 1,
    firstRequestNoCacheDelay: 1000 * 10,
    requestsInterval: 1000 * 3,
    timeout: 1000 * 180,
};
exports.RecaptchaV2EnterpriseTimeouts = {
    firstRequestDelay: 1000 * 1,
    firstRequestNoCacheDelay: 1000 * 10,
    requestsInterval: 1000 * 3,
    timeout: 1000 * 180,
};
exports.RecaptchaV3Timeouts = {
    firstRequestDelay: 1000 * 1,
    firstRequestNoCacheDelay: 1000 * 10,
    requestsInterval: 1000 * 3,
    timeout: 1000 * 180,
};
exports.ImageToTextTimeouts = {
    firstRequestDelay: 350,
    requestsInterval: 200,
    timeout: 1000 * 10,
};
exports.FunCaptchaTimeouts = {
    firstRequestDelay: 1000 * 1,
    firstRequestNoCacheDelay: 1000 * 10,
    requestsInterval: 1000 * 1,
    timeout: 1000 * 80,
};
exports.HCaptchaTimeouts = {
    firstRequestDelay: 1000 * 1,
    firstRequestNoCacheDelay: 1000 * 10,
    requestsInterval: 1000 * 3,
    timeout: 1000 * 180,
};
exports.GeeTestTimeouts = {
    firstRequestDelay: 1000 * 1,
    requestsInterval: 1000 * 1,
    timeout: 1000 * 80,
};
exports.TurnstileTimeouts = {
    firstRequestDelay: 1000 * 1,
    firstRequestNoCacheDelay: 1000 * 10,
    requestsInterval: 1000 * 1,
    timeout: 1000 * 80,
};
exports.ComplexImageTimeouts = {
    firstRequestDelay: 350,
    requestsInterval: 200,
    timeout: 1000 * 10,
};
exports.CustomTaskTimeouts = {
    firstRequestDelay: 1000 * 1,
    firstRequestNoCacheDelay: 1000 * 10,
    requestsInterval: 1000 * 1,
    timeout: 1000 * 80,
};
exports.AmazonTaskTimeouts = {
    firstRequestDelay: 1000 * 1,
    firstRequestNoCacheDelay: 1000 * 10,
    requestsInterval: 1000 * 1,
    timeout: 1000 * 80,
};
exports.BinanceTaskTimeouts = {
    firstRequestDelay: 1000 * 1,
    firstRequestNoCacheDelay: 1000 * 10,
    requestsInterval: 1000 * 1,
    timeout: 1000 * 80,
};
function detectResultTimeouts(task) {
    switch (task.type) {
        case TaskType_1.TaskType.FunCaptchaTaskProxyless:
        case TaskType_1.TaskType.FunCaptchaTask:
            return exports.FunCaptchaTimeouts;
        case TaskType_1.TaskType.GeeTestTaskProxyless:
        case TaskType_1.TaskType.GeeTestTask:
            return exports.GeeTestTimeouts;
        case TaskType_1.TaskType.HCaptchaTaskProxyless:
        case TaskType_1.TaskType.HCaptchaTask:
            return exports.HCaptchaTimeouts;
        case TaskType_1.TaskType.ImageToTextTask:
            return exports.ImageToTextTimeouts;
        case TaskType_1.TaskType.RecaptchaV2EnterpriseTaskProxyless:
        case TaskType_1.TaskType.RecaptchaV2EnterpriseTask:
            return exports.RecaptchaV2EnterpriseTimeouts;
        case TaskType_1.TaskType.NoCaptchaTaskProxyless:
        case TaskType_1.TaskType.NoCaptchaTask:
            return exports.RecaptchaV2Timeouts;
        case TaskType_1.TaskType.RecaptchaV3TaskProxyless:
            return exports.RecaptchaV3Timeouts;
        case TaskType_1.TaskType.TurnstileTaskProxyless:
        case TaskType_1.TaskType.TurnstileTask:
            return exports.TurnstileTimeouts;
        case TaskType_1.TaskType.ComplexImageTask:
            return exports.ComplexImageTimeouts;
        case TaskType_1.TaskType.CustomTask:
            return exports.CustomTaskTimeouts;
        case TaskType_1.TaskType.AmazonTaskProxyless:
        case TaskType_1.TaskType.AmazonTask:
            return exports.AmazonTaskTimeouts;
        case TaskType_1.TaskType.BinanceTaskProxyless:
        case TaskType_1.TaskType.BinanceTask:
            return exports.BinanceTaskTimeouts;
        default:
            throw new Error(`Could not detect result timeouts for provided task type = ${task.type}`);
    }
}
exports.detectResultTimeouts = detectResultTimeouts;
