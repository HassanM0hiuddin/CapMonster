import { CaptchaRequestBase, CaptchaRequestBaseIn } from './CaptchaRequestBase';
export type AmazonRequestBaseIn = {
    websiteURL: string;
    challengeScript: string;
    captchaScript: string;
    websiteKey: string;
    context: string;
    iv: string;
    cookieSolution?: boolean;
} & CaptchaRequestBaseIn;
/**
 * Base GeeTest recognition request
 */
export declare abstract class AmazonRequestBase extends CaptchaRequestBase {
    /**
     * Address of the page on which the captcha is recognized
     */
    websiteURL: string;
    /**
     * Link to challenge.js
     */
    challengeScript: string;
    /**
     * Link to captcha.js
     */
    captchaScript: string;
    /**
     * A string that can be retrieved from an html page with a captcha or with javascript by executing the window.gokuProps.key
     */
    websiteKey: string;
    /**
     * A string that can be retrieved from an html page with a captcha or with javascript by executing the window.gokuProps.context
     */
    context: string;
    /**
     * A string that can be retrieved from an html page with a captcha or with javascript by executing the window.gokuProps.iv
     */
    iv: string;
    /**
     * By default false. If you need to use cookies "aws-waf-token", specify the value true. Otherwise, what you will get in return is "captcha_voucher" and "existing_token".
     */
    cookieSolution?: boolean;
    constructor({ type, nocache, websiteURL, challengeScript, captchaScript, websiteKey, context, iv, cookieSolution }: AmazonRequestBaseIn);
}
