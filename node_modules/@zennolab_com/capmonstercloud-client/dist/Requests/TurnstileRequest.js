"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.TurnstileRequest = void 0;
const TaskType_1 = require("../TaskType");
const ts_mixer_1 = require("ts-mixer");
const ProxyInfo_1 = require("./ProxyInfo");
const TurnstileRequestBase_1 = require("./TurnstileRequestBase");
/**
 * TurnstileTask / Cloudflare Challenge (with proxy for cf-clearance).
 * {@link https://zennolab.atlassian.net/wiki/spaces/APIS/pages/2313814017/TurnstileTask+Cloudflare+Challenge}
 */
class TurnstileRequest extends (0, ts_mixer_1.Mixin)(TurnstileRequestBase_1.TurnstileRequestBase, ProxyInfo_1.ProxyInfo) {
    constructor(argsObj) {
        super(Object.assign({ type: TaskType_1.TaskType.TurnstileTask }, argsObj));
        this.cloudflareTaskType = argsObj.cloudflareTaskType;
        this.userAgent = argsObj.userAgent;
        if (argsObj.cloudflareTaskType === 'cf_clearance') {
            this.htmlPageBase64 = argsObj === null || argsObj === void 0 ? void 0 : argsObj.htmlPageBase64;
            this.data = argsObj === null || argsObj === void 0 ? void 0 : argsObj.data;
            this.pageData = argsObj === null || argsObj === void 0 ? void 0 : argsObj.pageData;
        }
        if (argsObj.cloudflareTaskType === 'token') {
            this.data = argsObj === null || argsObj === void 0 ? void 0 : argsObj.data;
            this.pageData = argsObj === null || argsObj === void 0 ? void 0 : argsObj.pageData;
            this.pageAction = argsObj.pageAction;
        }
    }
}
exports.TurnstileRequest = TurnstileRequest;
