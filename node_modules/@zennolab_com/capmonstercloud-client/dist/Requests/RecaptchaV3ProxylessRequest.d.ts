import { CaptchaRequestBase, CaptchaRequestBaseIn } from './CaptchaRequestBase';
type RecaptchaV3RequestIn = {
    websiteURL: string;
    websiteKey: string;
    minScore?: number;
    pageAction?: string;
} & CaptchaRequestBaseIn;
export type RecaptchaV3ProxylessRequestIn = Pick<RecaptchaV3RequestIn, Exclude<keyof RecaptchaV3RequestIn, 'type'>>;
/**
 * Recaptcha V3 recognition request (without proxy).
 * {@link https://zennolab.atlassian.net/wiki/spaces/APIS/pages/566853650/RecaptchaV3TaskProxyless+solving+Google+ReCaptcha+v.3}
 */
export declare class RecaptchaV3ProxylessRequest extends CaptchaRequestBase {
    /**
     * Address of a webpage with Google ReCaptcha
     */
    websiteURL: string;
    /**
     * Recaptcha website key.
     * @example
     * <![CDATA[
     * <div class="g-recaptcha" data-sitekey="THAT_ONE"></div>
     * ]]>
     */
    websiteKey: string;
    /**
     * Value from 0.1 to 0.9.
     */
    minScore?: number;
    /**
     * Widget action value.
     * Website owner defines what user is doing on the page through this parameter.
     * Default value: verify
     * @example
     * <![CDATA[
     * grecaptcha.execute('site_key', {action:'login_test'})]]>
     */
    pageAction: string;
    constructor({ nocache, websiteURL, websiteKey, minScore, pageAction }: RecaptchaV3ProxylessRequestIn);
}
export {};
