"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.CapMonsterCloudClientFactory = void 0;
const CapMonsterCloudClient_1 = require("./CapMonsterCloudClient");
const Utils_1 = require("./Utils");
const HttpClient_1 = require("./HttpClient");
class CapMonsterCloudClientFactory {
    static Create(options) {
        return new CapMonsterCloudClient_1.CapMonsterCloudClient(options, CapMonsterCloudClientFactory.httpClients.GetOrAdd(options.serviceUrl.href, CapMonsterCloudClientFactory.CreateHttpClient(options.serviceUrl)));
    }
    static CreateHttpClient(url) {
        const httpClient = new HttpClient_1.HttpClient({
            url,
            timeout: CapMonsterCloudClientFactory.httpTimeout,
            requestHeaders: { userAgent: CapMonsterCloudClientFactory.CreateUserAgentString() },
        });
        return httpClient;
    }
    static CreateUserAgentString() {
        let productVersion = 'ProductVersion';
        if (Utils_1.isNode) {
            // require('./package.json') hide require call from browser bundler, e.g. webpack
            const packageJSON = module[`require`].call(module, '../package.json');
            productVersion = packageJSON.version;
        }
        return `${CapMonsterCloudClientFactory.productName}/${productVersion}`;
    }
}
exports.CapMonsterCloudClientFactory = CapMonsterCloudClientFactory;
CapMonsterCloudClientFactory.httpTimeout = 1000 * 21;
CapMonsterCloudClientFactory.httpClients = new Utils_1.CsMap();
CapMonsterCloudClientFactory.productName = 'Zennolab.CapMonsterCloud.Client.JS';
